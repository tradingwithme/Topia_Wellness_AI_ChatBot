{"ast":null,"code":"var _jsxFileName = \"/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  // show first bot greeting at the start\n  useEffect(() => {\n    const botReply = \"üëã Hi! I‚Äôm your AI wellness assistant. How can I help you today?\";\n    setMessages([{\n      text: botReply,\n      sender: \"bot\"\n    }]);\n  }, []);\n\n  // send user message to backend\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      text: input,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    try {\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      setMessages(prev => [...prev, {\n        text: data.response,\n        sender: \"bot\",\n        user_input: input\n      }]);\n    } catch (err) {\n      console.error(\"Error fetching chatbot response:\", err);\n    }\n  };\n\n  // handle approve / correct feedback\n  const sendFeedback = async (type, user_input, responseOrCorrection) => {\n    let endpoint = \"\";\n    let payload = {};\n    if (type === \"approve\") {\n      endpoint = \"http://localhost:5000/api/feedback/approve\";\n      payload = {\n        user_input,\n        response: responseOrCorrection\n      };\n    } else if (type === \"correct\") {\n      endpoint = \"http://localhost:5000/api/feedback/correct\";\n      payload = {\n        user_input,\n        corrected_response: responseOrCorrection\n      };\n    }\n    try {\n      const res = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      console.log(\"Feedback response:\", data);\n      alert(data.message); // quick confirmation popup\n    } catch (err) {\n      console.error(\"Error sending feedback:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFeedback('y', msg.text),\n            children: \"\\uD83D\\uDC4D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFeedback('n', msg.text),\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"Z7bPrZHR9DDxNUXxHtFz54hQVxg=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","botReply","text","sender","sendMessage","trim","newMessages","res","fetch","method","headers","body","JSON","stringify","message","data","json","prev","response","user_input","err","console","error","sendFeedback","type","responseOrCorrection","endpoint","payload","corrected_response","log","alert","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleFeedback","value","onChange","e","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  // show first bot greeting at the start\n  useEffect(() => {\n    const botReply = \"üëã Hi! I‚Äôm your AI wellness assistant. How can I help you today?\";\n    setMessages([{ text: botReply, sender: \"bot\" }]);\n  }, []);\n\n  // send user message to backend\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const newMessages = [...messages, { text: input, sender: \"user\" }];\n    setMessages(newMessages);\n    setInput(\"\");\n\n    try {\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: input }),\n      });\n      const data = await res.json();\n\n      setMessages((prev) => [...prev, { text: data.response, sender: \"bot\", user_input: input }]);\n    } catch (err) {\n      console.error(\"Error fetching chatbot response:\", err);\n    }\n  };\n\n  // handle approve / correct feedback\n  const sendFeedback = async (type, user_input, responseOrCorrection) => {\n    let endpoint = \"\";\n    let payload = {};\n\n    if (type === \"approve\") {\n      endpoint = \"http://localhost:5000/api/feedback/approve\";\n      payload = { user_input, response: responseOrCorrection };\n    } else if (type === \"correct\") {\n      endpoint = \"http://localhost:5000/api/feedback/correct\";\n      payload = { user_input, corrected_response: responseOrCorrection };\n    }\n\n    try {\n      const res = await fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),\n      });\n      const data = await res.json();\n      console.log(\"Feedback response:\", data);\n      alert(data.message); // quick confirmation popup\n    } catch (err) {\n      console.error(\"Error sending feedback:\", err);\n    }\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <div className=\"chat-window\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`message ${msg.sender}`}>\n            <p>{msg.text}</p>\n\n            {/* Feedback buttons for bot replies */}\n            {msg.sender === 'bot' && (\n              <div className=\"feedback\">\n                <button onClick={() => handleFeedback('y', msg.text)}>üëç</button>\n                <button onClick={() => handleFeedback('n', msg.text)}>‚úèÔ∏è</button>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"input-area\">\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}