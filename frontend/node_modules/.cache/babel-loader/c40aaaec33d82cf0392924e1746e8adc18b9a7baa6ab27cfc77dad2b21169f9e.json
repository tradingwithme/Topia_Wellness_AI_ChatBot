{"ast":null,"code":"var _jsxFileName = \"/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Message from './Message';\nimport './styles/Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! I am your sophisticated chatbot. How can I assist you today?\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [hideTyping, setHideTyping] = useState(false);\n  const [correctionIndex, setCorrectionIndex] = useState(null);\n  const [correctionText, setCorrectionText] = useState(\"\");\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    // Add user message\n    const newMessages = [...messages, {\n      text: input,\n      sender: 'user',\n      timestamp: new Date()\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n\n    // Show typing indicator\n    setIsTyping(true);\n    setHideTyping(false);\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botReply = \"This is a smart response generated by the backend system.\";\n      setMessages(prev => [...prev, {\n        text: botReply,\n        sender: 'bot',\n        timestamp: new Date(),\n        onFirstSentence: () => {\n          setHideTyping(true);\n          setTimeout(() => setIsTyping(false), 500);\n        }\n      }]);\n    }, 1500);\n  };\n\n  // Handle feedback buttons\n  const handleFeedback = (type, messageText, index) => {\n    if (type === 'y') {\n      console.log(\"Approved:\", messageText);\n      // TODO: call backend to save approved response\n    } else if (type === 'n') {\n      setCorrectionIndex(index);\n      setCorrectionText(\"\");\n    }\n  };\n\n  // Submit correction\n  const submitCorrection = index => {\n    console.log(\"Correction submitted:\", correctionText);\n    // TODO: send correctionText + original bot message to backend\n    setCorrectionIndex(null);\n    setCorrectionText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: \"\\uD83D\\uDCAC Topia's AI Wellness Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Message, {\n          text: msg.text,\n          sender: msg.sender,\n          timestamp: msg.timestamp,\n          onFirstSentence: msg.onFirstSentence\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFeedback('y', msg.text, index),\n            children: \"\\uD83D\\uDC4D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleFeedback('n', msg.text, index),\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), correctionIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"correction-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: correctionText,\n            onChange: e => setCorrectionText(e.target.value),\n            placeholder: \"Suggest a better response...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => submitCorrection(index),\n            children: \"\\u2714\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `typing-indicator ${hideTyping ? \"hidden\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"chat-input\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: handleSend,\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"5wWxcwxDQcfyH5g7NwurpBjRDuc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Message","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","sender","input","setInput","isTyping","setIsTyping","hideTyping","setHideTyping","correctionIndex","setCorrectionIndex","correctionText","setCorrectionText","handleSend","trim","newMessages","timestamp","Date","setTimeout","botReply","prev","onFirstSentence","handleFeedback","type","messageText","index","console","log","submitCorrection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Message from './Message';\nimport './styles/Chatbot.css';\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! I am your sophisticated chatbot. How can I assist you today?\", sender: \"bot\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [hideTyping, setHideTyping] = useState(false);\n  const [correctionIndex, setCorrectionIndex] = useState(null);\n  const [correctionText, setCorrectionText] = useState(\"\");\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    // Add user message\n    const newMessages = [...messages, { text: input, sender: 'user', timestamp: new Date() }];\n    setMessages(newMessages);\n    setInput(\"\");\n\n    // Show typing indicator\n    setIsTyping(true);\n    setHideTyping(false);\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botReply = \"This is a smart response generated by the backend system.\";\n      setMessages(prev => [\n        ...prev,\n        {\n          text: botReply,\n          sender: 'bot',\n          timestamp: new Date(),\n          onFirstSentence: () => {\n            setHideTyping(true);\n            setTimeout(() => setIsTyping(false), 500);\n          }\n        }\n      ]);\n    }, 1500);\n  };\n\n  // Handle feedback buttons\n  const handleFeedback = (type, messageText, index) => {\n    if (type === 'y') {\n      console.log(\"Approved:\", messageText);\n      // TODO: call backend to save approved response\n    } else if (type === 'n') {\n      setCorrectionIndex(index);\n      setCorrectionText(\"\");\n    }\n  };\n\n  // Submit correction\n  const submitCorrection = (index) => {\n    console.log(\"Correction submitted:\", correctionText);\n    // TODO: send correctionText + original bot message to backend\n    setCorrectionIndex(null);\n    setCorrectionText(\"\");\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-header\">💬 Topia's AI Wellness Assistant</div>\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <div key={index}>\n            <Message\n              text={msg.text}\n              sender={msg.sender}\n              timestamp={msg.timestamp}\n              onFirstSentence={msg.onFirstSentence}\n            />\n\n            {/* Feedback buttons only for bot */}\n            {msg.sender === 'bot' && (\n              <div className=\"feedback\">\n                <button onClick={() => handleFeedback('y', msg.text, index)}>👍</button>\n                <button onClick={() => handleFeedback('n', msg.text, index)}>✏️</button>\n              </div>\n            )}\n\n            {/* Inline correction box */}\n            {correctionIndex === index && (\n              <div className=\"correction-box\">\n                <input\n                  type=\"text\"\n                  value={correctionText}\n                  onChange={(e) => setCorrectionText(e.target.value)}\n                  placeholder=\"Suggest a better response...\"\n                />\n                <button onClick={() => submitCorrection(index)}>✔️</button>\n              </div>\n            )}\n          </div>\n        ))}\n\n        {/* Typing Indicator */}\n        {isTyping && (\n          <div className={`typing-indicator ${hideTyping ? \"hidden\" : \"\"}`}>\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"chat-input-area\">\n        <input\n          type=\"text\"\n          className=\"chat-input\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <button className=\"send-button\" onClick={handleSend}>➤</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}