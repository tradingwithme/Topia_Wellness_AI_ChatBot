{"ast":null,"code":"var _jsxFileName = \"/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport \"./styles/Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    setMessages([{\n      text: \"Welcome to Topia's AI Wellness Chatbot. How may I assist you today?\",\n      sender: \"bot\",\n      timestamp: new Date(),\n      showFeedback: false\n    }]);\n  }, []);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      text: input,\n      sender: \"user\",\n      timestamp: new Date()\n    }];\n    setMessages(newMessages);\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      const res = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: input\n        })\n      });\n      const data = await res.json();\n      const botReply = data.response || \"Sorry, I couldn’t process that.\";\n      setMessages(prev => [...prev, {\n        text: botReply,\n        sender: \"bot\",\n        timestamp: new Date(),\n        showFeedback: true\n      }]);\n    } catch (err) {\n      console.error(\"Error fetching bot reply:\", err);\n      setMessages(prev => [...prev, {\n        text: \"⚠️ Error: Could not connect to backend.\",\n        sender: \"bot\",\n        timestamp: new Date(),\n        showFeedback: true\n      }]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleApprove = message => {\n    console.log(\"Approved:\", message);\n  };\n  const handleCorrection = message => {\n    const correction = prompt(\"Enter a better response:\");\n    if (correction) {\n      console.log(\"Correction:\", correction);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: \"\\uD83D\\uDCAC Topia's AI Wellness Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        sender: msg.sender,\n        timestamp: msg.timestamp,\n        showFeedback: msg.showFeedback,\n        onApprove: () => handleApprove(msg.text),\n        onCorrection: () => handleCorrection(msg.text)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"chatbot-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"chatbot-send-btn\",\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"jR6uTrwAp7mYu0GQWebHtq4I+AU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","Message","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","text","sender","timestamp","Date","showFeedback","handleSend","trim","newMessages","res","fetch","method","headers","body","JSON","stringify","user_input","data","json","botReply","response","prev","err","console","error","handleApprove","message","log","handleCorrection","correction","prompt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onApprove","onCorrection","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport \"./styles/Chatbot.css\";\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n\n  useEffect(() => {\n    setMessages([\n      { text: \"Welcome to Topia's AI Wellness Chatbot. How may I assist you today?\", sender: \"bot\", timestamp: new Date(), showFeedback: false }\n    ]);\n  }, []);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    \n    const newMessages = [...messages, { text: input, sender: \"user\", timestamp: new Date() }];\n    setMessages(newMessages);\n    setInput(\"\");\n    setIsTyping(true);\n\n    try {\n      const res = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ user_input: input }),\n      });\n\n      const data = await res.json();\n      const botReply = data.response || \"Sorry, I couldn’t process that.\";\n\n      setMessages((prev) => [\n        ...prev,\n        { text: botReply, sender: \"bot\", timestamp: new Date(), showFeedback: true } \n      ]);\n    } catch (err) {\n      console.error(\"Error fetching bot reply:\", err);\n      setMessages((prev) => [\n        ...prev,\n        { text: \"⚠️ Error: Could not connect to backend.\", sender: \"bot\", timestamp: new Date(), showFeedback: true }\n      ]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleApprove = (message) => {\n    console.log(\"Approved:\", message);\n  };\n\n  const handleCorrection = (message) => {\n    const correction = prompt(\"Enter a better response:\");\n    if (correction) {\n      console.log(\"Correction:\", correction);\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chat-header\">💬 Topia's AI Wellness Assistant</div>\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <Message\n            key={index}\n            text={msg.text}\n            sender={msg.sender}\n            timestamp={msg.timestamp}\n            showFeedback={msg.showFeedback}\n            onApprove={() => handleApprove(msg.text)}\n            onCorrection={() => handleCorrection(msg.text)}\n          />\n        ))}\n\n        {isTyping && (\n          <div className=\"typing-indicator\">\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n            <div className=\"dot\"></div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"chatbot-input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n          className=\"chatbot-input\"\n        />\n        <button onClick={handleSend} className=\"chatbot-send-btn\">➤</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}