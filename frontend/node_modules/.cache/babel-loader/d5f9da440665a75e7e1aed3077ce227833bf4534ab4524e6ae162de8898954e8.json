{"ast":null,"code":"var _jsxFileName = \"/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport \"./styles/Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    // Initial welcome message\n    setMessages([{\n      text: \"ðŸŒ¿ Welcome to Topia's AI Wellness Chatbot. How may I assist you today?\",\n      sender: \"bot\",\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      })\n    }]);\n  }, []);\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\",\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      })\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    // Bot reply mock (replace with backend API call)\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        text: \"âœ¨ Thank you for your message. Iâ€™ll process your request!\",\n        sender: \"bot\",\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        })\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: \"\\uD83D\\uDCAC Topia\\u2019s AI Wellness Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        sender: msg.sender,\n        timestamp: msg.timestamp\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"chatbot-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"chatbot-send-btn\",\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Z7bPrZHR9DDxNUXxHtFz54hQVxg=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","Message","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","text","sender","timestamp","Date","toLocaleTimeString","hour","minute","handleSend","trim","userMessage","setTimeout","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/workspaces/Topia_Wellness_AI_ChatBot/frontend/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Message from \"./Message\";\nimport \"./styles/Chatbot.css\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    // Initial welcome message\n    setMessages([\n      {\n        text: \"ðŸŒ¿ Welcome to Topia's AI Wellness Chatbot. How may I assist you today?\",\n        sender: \"bot\",\n        timestamp: new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" }),\n      },\n    ]);\n  }, []);\n\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\",\n      timestamp: new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" }),\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    // Bot reply mock (replace with backend API call)\n    setTimeout(() => {\n      setMessages((prev) => [\n        ...prev,\n        {\n          text: \"âœ¨ Thank you for your message. Iâ€™ll process your request!\",\n          sender: \"bot\",\n          timestamp: new Date().toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" }),\n        },\n      ]);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <div className=\"chatbot-header\">ðŸ’¬ Topiaâ€™s AI Wellness Assistant</div>\n      <div className=\"chatbot-messages\">\n        {messages.map((msg, idx) => (\n          <Message key={idx} text={msg.text} sender={msg.sender} timestamp={msg.timestamp} />\n        ))}\n      </div>\n      <div className=\"chatbot-input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n          className=\"chatbot-input\"\n        />\n        <button onClick={handleSend} className=\"chatbot-send-btn\">âž¤</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}